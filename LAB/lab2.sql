-- DROP EVERYTHING
EXECUTE FOR i IN (SELECT 1 FROM user_tables WHERE table_name = 'USLUGA') LOOP EXECUTE IMMEDIATE  'DROP TABLE USLUGA CASCADE CONSTRAINTS'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'USLUGA_PK') LOOP EXECUTE IMMEDIATE 'DROP INDEX USLUGA_PK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_sequences WHERE sequence_name = 'USLUGA_SEQ') LOOP EXECUTE IMMEDIATE 'DROP SEQUENCE USLUGA_SEQ'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_triggers WHERE trigger_name = 'USLUGA_AUTOINCREMENT') LOOP EXECUTE IMMEDIATE 'DROP TRIGGER USLUGA_AUTOINCREMENT'; END LOOP

EXECUTE FOR i IN (SELECT 1 FROM user_tables WHERE table_name = 'MIASTO') LOOP EXECUTE IMMEDIATE  'DROP TABLE MIASTO CASCADE CONSTRAINTS'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'MIASTO_PK') LOOP EXECUTE IMMEDIATE 'DROP INDEX MIASTO_PK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_sequences WHERE sequence_name = 'MIASTO_SEQ') LOOP EXECUTE IMMEDIATE 'DROP SEQUENCE MIASTO_SEQ'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_triggers WHERE trigger_name = 'MIASTO_AUTOINCREMENT') LOOP EXECUTE IMMEDIATE 'DROP TRIGGER MIASTO_AUTOINCREMENT'; END LOOP

EXECUTE FOR i IN (SELECT 1 FROM user_tables WHERE table_name = 'ADRES') LOOP EXECUTE IMMEDIATE  'DROP TABLE ADRES CASCADE CONSTRAINTS'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'ADRES_PK') LOOP EXECUTE IMMEDIATE 'DROP INDEX ADRES_PK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'ADRES_MIASTO_FK') LOOP EXECUTE IMMEDIATE 'DROP INDEX ADRES_MIASTO_FK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_sequences WHERE sequence_name = 'ADRES_SEQ') LOOP EXECUTE IMMEDIATE 'DROP SEQUENCE ADRES_SEQ'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_triggers WHERE trigger_name = 'ADRES_AUTOINCREMENT') LOOP EXECUTE IMMEDIATE 'DROP TRIGGER ADRES_AUTOINCREMENT'; END LOOP

EXECUTE FOR i IN (SELECT 1 FROM user_tables WHERE table_name = 'OSOBA') LOOP EXECUTE IMMEDIATE  'DROP TABLE OSOBA CASCADE CONSTRAINTS'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'OSOBA_PK') LOOP EXECUTE IMMEDIATE 'DROP INDEX OSOBA_PK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'OSOBA_ADRES_FK') LOOP EXECUTE IMMEDIATE 'DROP INDEX OSOBA_ADRES_FK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_sequences WHERE sequence_name = 'OSOBA_STAN_CYWILNY_CHK') LOOP EXECUTE IMMEDIATE 'DROP INDEX OSOBA_STAN_CYWILNY_CHK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_sequences WHERE sequence_name = 'OSOBA_SEQ') LOOP EXECUTE IMMEDIATE 'DROP SEQUENCE OSOBA_SEQ'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_triggers WHERE trigger_name = 'OSOBA_AUTOINCREMENT') LOOP EXECUTE IMMEDIATE 'DROP TRIGGER OSOBA_AUTOINCREMENT'; END LOOP

EXECUTE FOR i IN (SELECT 1 FROM user_tables WHERE table_name = 'PRACOWNIK') LOOP EXECUTE IMMEDIATE  'DROP TABLE PRACOWNIK CASCADE CONSTRAINTS'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'PRACOWNIK_PK') LOOP EXECUTE IMMEDIATE 'DROP INDEX PRACOWNIK_PK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'PRACOWNIK_OSOBA_FK') LOOP EXECUTE IMMEDIATE 'DROP INDEX PRACOWNIK_OSOBA_FK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_sequences WHERE sequence_name = 'PRACOWNIK_SEQ') LOOP EXECUTE IMMEDIATE 'DROP SEQUENCE PRACOWNIK_SEQ'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_triggers WHERE trigger_name = 'PRACOWNIK_AUTOINCREMENT') LOOP EXECUTE IMMEDIATE 'DROP TRIGGER PRACOWNIK_AUTOINCREMENT'; END LOOP

EXECUTE FOR i IN (SELECT 1 FROM user_tables WHERE table_name = 'KLIENT') LOOP EXECUTE IMMEDIATE  'DROP TABLE KLIENT CASCADE CONSTRAINTS'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'KLIENT_PK') LOOP EXECUTE IMMEDIATE 'DROP INDEX KLIENT_PK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'KLIENT_OSOBA_FK') LOOP EXECUTE IMMEDIATE 'DROP INDEX KLIENT_OSOBA_FK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'KLIENT_ZNIZKA_CHK') LOOP EXECUTE IMMEDIATE 'DROP INDEX KLIENT_ZNIZKA_CHK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_sequences WHERE sequence_name = 'KLIENT_SEQ') LOOP EXECUTE IMMEDIATE 'DROP SEQUENCE KLIENT_SEQ'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_triggers WHERE trigger_name = 'KLIENT_AUTOINCREMENT') LOOP EXECUTE IMMEDIATE 'DROP TRIGGER KLIENT_AUTOINCREMENT'; END LOOP

EXECUTE FOR i IN (SELECT 1 FROM user_tables WHERE table_name = 'ZLECENIE') LOOP EXECUTE IMMEDIATE  'DROP TABLE ZLECENIE CASCADE CONSTRAINTS'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'ZLECENIE_PK') LOOP EXECUTE IMMEDIATE 'DROP INDEX ZLECENIE_PK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'ZLECENIE_USLUGA_FK') LOOP EXECUTE IMMEDIATE 'DROP INDEX ZLECENIE_USLUGA_FK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'ZLECENIE_KLIENT_FK') LOOP EXECUTE IMMEDIATE 'DROP INDEX ZLECENIE_KLIENT_FK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_indexes WHERE index_name = 'ZLECENIE_PRACOWNIK_FK') LOOP EXECUTE IMMEDIATE 'DROP INDEX ZLECENIE_PRACOWNIK_FK'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_sequences WHERE sequence_name = 'ZLECENIE_SEQ') LOOP EXECUTE IMMEDIATE 'DROP SEQUENCE ZLECENIE_SEQ'; END LOOP
EXECUTE FOR i IN (SELECT 1 FROM user_triggers WHERE trigger_name = 'ZLECENIE_AUTOINCREMENT') LOOP EXECUTE IMMEDIATE 'DROP TRIGGER ZLECENIE_AUTOINCREMENT'; END LOOP


-- TABLE USLUGA
CREATE TABLE USLUGA (
  id NUMBER(10),
  opis_uslugi VARCHAR2(100) NOT NULL,
  cena_podstawowa NUMBER(12,2) NOT NULL,
  CONSTRAINT USLUGA_PK PRIMARY KEY (id)
);
CREATE SEQUENCE USLUGA_SEQ;

CREATE OR REPLACE TRIGGER USLUGA_AUTOINCREMENT
BEFORE INSERT ON USLUGA
FOR EACH ROW
BEGIN
  SELECT USLUGA_SEQ.NEXTVAL
  INTO   :new.id
  FROM   dual;
END;
/

-- TABLE MIASTO
CREATE TABLE MIASTO (
  id NUMBER(10),
  nazwa VARCHAR2(100) NOT NULL,
  CONSTRAINT MIASTO_PK PRIMARY KEY (id)
);
CREATE SEQUENCE MIASTO_SEQ;

CREATE OR REPLACE TRIGGER MIASTO_AUTOINCREMENT
BEFORE INSERT ON MIASTO
FOR EACH ROW
BEGIN
  SELECT MIASTO_SEQ.NEXTVAL
  INTO   :new.id
  FROM   dual;
END;
/

-- TABLE ADRES
CREATE TABLE ADRES (
  id NUMBER(10),
  miasto_id NUMBER(10) NOT NULL,
  ulica VARCHAR2(100) NOT NULL,
  nr_domu VARCHAR2(100) NOT NULL, -- Może zawierać litery, np. 12A
  nr_mieszkania VARCHAR2(100), -- jak wyżej
  CONSTRAINT ADRES_PK PRIMARY KEY (id),
  CONSTRAINT ADRES_MIASTO_FK FOREIGN KEY (miasto_id) REFERENCES MIASTO (id)
);
CREATE SEQUENCE ADRES_SEQ;

CREATE OR REPLACE TRIGGER ADRES_AUTOINCREMENT
BEFORE INSERT ON ADRES
FOR EACH ROW
BEGIN
  SELECT ADRES_SEQ.NEXTVAL
  INTO   :new.id
  FROM   dual;
END;
/

-- TABLE OSOBA
CREATE TABLE OSOBA (
  id NUMBER(10),
  adres_id NUMBER(10) NOT NULL,
  imie VARCHAR2(100) NOT NULL,
  nazwisko VARCHAR2(100) NOT NULL,
  wiek NUMBER(3) NOT NULL,
  stan_cywilny NUMBER(1) NOT NULL,
  telefon VARCHAR2(100),
  pesel NUMBER(11) NOT NULL,
  CONSTRAINT OSOBA_PK PRIMARY KEY (id),
  CONSTRAINT OSOBA_ADRES_FK FOREIGN KEY (adres_id) REFERENCES ADRES (id),
  CONSTRAINT OSOBA_STAN_CYWILNY_CHK CHECK (stan_cywilny = 0 OR stan_cywilny = 1) -- Emulacja boolean
);
CREATE SEQUENCE OSOBA_SEQ;

CREATE OR REPLACE TRIGGER OSOBA_AUTOINCREMENT
BEFORE INSERT ON OSOBA
FOR EACH ROW
BEGIN
  SELECT OSOBA_SEQ.NEXTVAL
  INTO   :new.id
  FROM   dual;
END;
/

-- TABLE PRACOWNIK
CREATE TABLE PRACOWNIK (
  id NUMBER(10),
  osoba_id NUMBER(10) NOT NULL,
  stanowisko VARCHAR2(100) NOT NULL,
  staz_pracy NUMBER(3),
  wynagrodzenie_brutto NUMBER(12,2),
  CONSTRAINT PRACOWNIK_PK PRIMARY KEY (id),
  CONSTRAINT PRACOWNIK_OSOBA_FK FOREIGN KEY (osoba_id) REFERENCES OSOBA (id)
);
CREATE SEQUENCE PRACOWNIK_SEQ;

CREATE OR REPLACE TRIGGER PRACOWNIK_AUTOINCREMENT
BEFORE INSERT ON PRACOWNIK
FOR EACH ROW
BEGIN
  SELECT PRACOWNIK_SEQ.NEXTVAL
  INTO   :new.id
  FROM   dual;
END;
/

-- TABLE KLIENT
CREATE TABLE KLIENT (
  id NUMBER(10),
  osoba_id NUMBER(10) NOT NULL,
  znizka NUMBER(3) DEFAULT 0, -- Wyrażone procentowo (od 0 do 100 procent)
  CONSTRAINT KLIENT_PK PRIMARY KEY (id),
  CONSTRAINT KLIENT_OSOBA_FK FOREIGN KEY (osoba_id) REFERENCES OSOBA (id),
  CONSTRAINT KLIENT_ZNIZKA_CHK CHECK (znizka >= 0 AND znizka <= 100)
);
CREATE SEQUENCE KLIENT_SEQ;

CREATE OR REPLACE TRIGGER KLIENT_AUTOINCREMENT
BEFORE INSERT ON KLIENT
FOR EACH ROW
BEGIN
  SELECT KLIENT_SEQ.NEXTVAL
  INTO   :new.id
  FROM   dual;
END;
/

-- TABLE ZLECENIE
CREATE TABLE ZLECENIE (
  id NUMBER(10),
  usluga_id NUMBER(10) NOT NULL,
  klient_id NUMBER(10) NOT NULL,
  pracownik_id NUMBER(10) NOT NULL,
  CONSTRAINT ZLECENIE_PK PRIMARY KEY (id),
  CONSTRAINT ZLECENIE_USLUGA_FK FOREIGN KEY (usluga_id) REFERENCES USLUGA (id),
  CONSTRAINT ZLECENIE_KLIENT_FK FOREIGN KEY (klient_id) REFERENCES KLIENT (id),
  CONSTRAINT ZLECENIE_PRACOWNIK_FK FOREIGN KEY (pracownik_id) REFERENCES PRACOWNIK (id)
);
CREATE SEQUENCE ZLECENIE_SEQ;

CREATE OR REPLACE TRIGGER ZLECENIE_AUTOINCREMENT
BEFORE INSERT ON ZLECENIE
FOR EACH ROW
BEGIN
  SELECT ZLECENIE_SEQ.NEXTVAL
  INTO   :new.id
  FROM   dual;
END;
/

-- INSERT
-- 10 rekordów dokażdej tabeli

-- SELECT
-- SELECT * z każdej tabeli conajmniej
-- jakiś join

-- UPDATE, DELETE, DROP, ALTER
-- po 1 przykładzie do każdego
