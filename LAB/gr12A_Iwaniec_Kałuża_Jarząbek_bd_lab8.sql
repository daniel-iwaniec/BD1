-- TO NIE JEST SKOÑCZONE
-- PONIEWA¯ MIELIŒMY TEGO NIE ROBIÆ

-- DROP
CREATE OR REPLACE PROCEDURE DROP_ALL AUTHID DEFINER IS
  CURSOR CURSOR_OBJECT IS
    SELECT object_type,'"'||object_name||'"'||decode(object_type, 'TABLE', ' CASCADE CONSTRAINTS', NULL) AS obj_name
    FROM user_objects
    WHERE object_type IN ('TABLE')
    AND object_name LIKE '%_COPY';
BEGIN
  BEGIN
    FOR OBJECT in CURSOR_OBJECT LOOP
      EXECUTE IMMEDIATE ('DROP '||OBJECT.object_type||' ' ||OBJECT.obj_name);
    END LOOP;
  END;
END;
/
EXECUTE DROP_ALL;

-- CREATE COPY TABLES
DECLARE
  ddl VARCHAR2(32767);
BEGIN
  SELECT dbms_metadata.get_ddl('TABLE', 'ADRESY') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"ADRESY"', '"ADRESY_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"ADRES_PK"', '"ADRES_PK_COPY"') INTO ddl FROM DUAL;
  --dbms_output.put_line(ddl);
  EXECUTE IMMEDIATE ddl;
END;
/
INSERT INTO ADRESY_COPY SELECT * FROM ADRESY;

DECLARE
  ddl VARCHAR2(32767);
BEGIN
  SELECT dbms_metadata.get_ddl('TABLE', 'OSOBY') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"OSOBY"', '"OSOBY_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"OSOBY_PK"', '"OSOBY_PK_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"CH_WIEK"', '"CH_WIEK_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"OSOBA_UNI"', '"OSOBA_UNI_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"OS_AD_FK"', '"OS_AD_FK_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"ADRESY"', '"ADRESY_COPY"') INTO ddl FROM DUAL;
  --dbms_output.put_line(ddl);
  EXECUTE IMMEDIATE ddl;
END;
/
INSERT INTO OSOBY_COPY SELECT * FROM OSOBY;

DECLARE
  ddl VARCHAR2(32767);
BEGIN
  SELECT dbms_metadata.get_ddl('TABLE', 'KLIENCI') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"KLIENCI"', '"KLIENCI_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"KLIENT_PK"', '"KLIENT_PK_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"KL_UNIQUE"', '"KL_UNIQUE_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"KL_OS_FK"', '"KL_OS_FK_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"OSOBY"', '"OSOBY_COPY"') INTO ddl FROM DUAL;
  --dbms_output.put_line(ddl);
  EXECUTE IMMEDIATE ddl;
END;
/
INSERT INTO KLIENCI_COPY SELECT * FROM KLIENCI;

DECLARE
  ddl VARCHAR2(32767);
BEGIN
  SELECT dbms_metadata.get_ddl('TABLE', 'STANOWISKA') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"STANOWISKA"', '"STANOWISKA_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"STANOWISKO_PK"', '"STANOWISKO_PK_COPY"') INTO ddl FROM DUAL;
  --dbms_output.put_line(ddl);
  EXECUTE IMMEDIATE ddl;
END;
/
INSERT INTO STANOWISKA_COPY SELECT * FROM STANOWISKA;

DECLARE
  ddl VARCHAR2(32767);
BEGIN
  SELECT dbms_metadata.get_ddl('TABLE', 'PRACOWNICY') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"PRACOWNICY"', '"PRACOWNICY_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"PRACOWNIK_PK"', '"PRACOWNIK_PK_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"CH_STAZ"', '"CH_STAZ_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"PEN_STAZ"', '"PEN_STAZ_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"PR_UNIQUE"', '"PR_UNIQUE_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"PR_OS_FK"', '"PR_OS_FK_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"OSOBY"', '"OSOBY_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"PR_ST_FK"', '"PR_ST_FK_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"STANOWISKA"', '"STANOWISKA_COPY"') INTO ddl FROM DUAL;
  --dbms_output.put_line(ddl);
  EXECUTE IMMEDIATE ddl;
END;
/
INSERT INTO PRACOWNICY_COPY SELECT * FROM PRACOWNICY;

DECLARE
  ddl VARCHAR2(32767);
BEGIN
  SELECT dbms_metadata.get_ddl('TABLE', 'USLUGI') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"USLUGI"', '"USLUGI_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"USLUGI_PK"', '"USLUGI_PK_COPY"') INTO ddl FROM DUAL;
  --dbms_output.put_line(ddl);
  EXECUTE IMMEDIATE ddl;
END;
/
INSERT INTO USLUGI_COPY SELECT * FROM USLUGI;

DECLARE
  ddl VARCHAR2(32767);
BEGIN
  SELECT dbms_metadata.get_ddl('TABLE', 'ZLECENIA') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"ZLECENIA"', '"ZLECENIA_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"ZLECENIE_PK"', '"ZLECENIE_PK_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"ZL_US_FK"', '"ZL_US_FK_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"USLUGI"', '"USLUGI_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"ZL_KL_FK"', '"ZL_KL_FK_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"KLIENCI"', '"KLIENCI_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"ZL_PR_FK"', '"ZL_PR_FK_COPY"') INTO ddl FROM DUAL;
  SELECT REPLACE(ddl, '"PRACOWNICY"', '"PRACOWNICY_COPY"') INTO ddl FROM DUAL;
  --dbms_output.put_line(ddl);
  EXECUTE IMMEDIATE ddl;
END;
/
INSERT INTO ZLECENIA_COPY SELECT * FROM ZLECENIA;

-- CREATE INSERT TRIGGERS
CREATE OR REPLACE TRIGGER ADRESY_COPY_VALUES
BEFORE INSERT ON ADRESY
FOR EACH ROW
BEGIN
 INSERT INTO ADRESY_COPY (id_adresu, miasto, ulica, nr)
 VALUES (:new.id_adresu, :new.miasto, :new.ulica, :new.nr);
END ADRESY_COPY_VALUES;
/

CREATE OR REPLACE TRIGGER OSOBY_COPY_VALUES
BEFORE INSERT ON OSOBY
FOR EACH ROW
BEGIN
 INSERT INTO OSOBY_COPY (id_osoby, imie, nazwisko, wiek, stan_cywilny, telefon, pesel, id_adresu)
 VALUES (:new.id_osoby, :new.imie, :new.nazwisko, :new.wiek, :new.stan_cywilny, :new.telefon, :new.pesel, :new.id_adresu);
END OSOBY_COPY_VALUES;
/

CREATE OR REPLACE TRIGGER KLIENCI_COPY_VALUES
BEFORE INSERT ON KLIENCI
FOR EACH ROW
BEGIN
 INSERT INTO KLIENCI_COPY (id_klienta, id_osoby, znizka)
 VALUES (:new.id_klienta, :new.id_osoby, :new.znizka);
END KLIENCI_COPY_VALUES;
/

CREATE OR REPLACE TRIGGER STANOWISKA_COPY_VALUES
BEFORE INSERT ON STANOWISKA
FOR EACH ROW
BEGIN
 INSERT INTO STANOWISKA_COPY (id_stanowiska, nazwa, opis)
 VALUES (:new.id_stanowiska, :new.nazwa, :new.opis);
END STANOWISKA_COPY_VALUES;
/

CREATE OR REPLACE TRIGGER STANOWISKA_COPY_VALUES
BEFORE INSERT ON STANOWISKA
FOR EACH ROW
BEGIN
 INSERT INTO STANOWISKA_COPY (id_stanowiska, nazwa, opis)
 VALUES (:new.id_stanowiska, :new.nazwa, :new.opis);
END STANOWISKA_COPY_VALUES;
/

CREATE OR REPLACE TRIGGER PRACOWNICY_COPY_VALUES
BEFORE INSERT ON PRACOWNICY
FOR EACH ROW
BEGIN
 INSERT INTO PRACOWNICY_COPY (id_pracownika, id_osoby, id_stanowiska, staz, pensja_br)
 VALUES (:new.id_pracownika, :new.id_osoby, :new.id_stanowiska, :new.staz, :new.pensja_br);
END STANOWISKA_COPY_VALUES;
/

CREATE OR REPLACE TRIGGER USLUGI_COPY_VALUES
BEFORE INSERT ON USLUGI
FOR EACH ROW
BEGIN
 INSERT INTO USLUGI_COPY (id_uslugi, opis, cena)
 VALUES (:new.id_uslugi, :new.opis, :new.cena);
END USLUGI_COPY_VALUES;
/

CREATE OR REPLACE TRIGGER ZLECENIA_COPY_VALUES
BEFORE INSERT ON ZLECENIA
FOR EACH ROW
BEGIN
 INSERT INTO ZLECENIA_COPY (id_zlecenia, id_uslugi, id_klienta, id_pracownika)
 VALUES (:new.id_zlecenia, :new.id_uslugi, :new.id_klienta, :new.id_pracownika);
END USLUGI_COPY_VALUES;
/

-- CREATE UPDATE TRIGGERS
CREATE OR REPLACE TRIGGER ADRESY_UPDATE_VALUES
BEFORE UPDATE ON ADRESY
FOR EACH ROW
BEGIN
 INSERT INTO ADRESY_COPY (id_adresu, miasto, ulica, nr)
 VALUES (:new.id_adresu, :new.miasto, :new.ulica, :new.nr);
END ADRESY_UPDATE_VALUES;
/

CREATE OR REPLACE TRIGGER OSOBY_UPDATE_VALUES
BEFORE UPDATE ON OSOBY
FOR EACH ROW
BEGIN
 INSERT INTO OSOBY_COPY (id_osoby, imie, nazwisko, wiek, stan_cywilny, telefon, pesel, id_adresu)
 VALUES (:new.id_osoby, :new.imie, :new.nazwisko, :new.wiek, :new.stan_cywilny, :new.telefon, :new.pesel, :new.id_adresu);
END OSOBY_UPDATE_VALUES;
/

CREATE OR REPLACE TRIGGER KLIENCI_UPDATE_VALUES
BEFORE UPDATE ON KLIENCI
FOR EACH ROW
BEGIN
 INSERT INTO KLIENCI_COPY (id_klienta, id_osoby, znizka)
 VALUES (:new.id_klienta, :new.id_osoby, :new.znizka);
END KLIENCI_UPDATE_VALUES;
/

CREATE OR REPLACE TRIGGER STANOWISKA_UPDATE_VALUES
BEFORE UPDATE ON STANOWISKA
FOR EACH ROW
BEGIN
 INSERT INTO STANOWISKA_COPY (id_stanowiska, nazwa, opis)
 VALUES (:new.id_stanowiska, :new.nazwa, :new.opis);
END STANOWISKA_UPDATE_VALUES;
/

CREATE OR REPLACE TRIGGER STANOWISKA_UPDATE_VALUES
BEFORE UPDATE ON STANOWISKA
FOR EACH ROW
BEGIN
 INSERT INTO STANOWISKA_COPY (id_stanowiska, nazwa, opis)
 VALUES (:new.id_stanowiska, :new.nazwa, :new.opis);
END STANOWISKA_UPDATE_VALUES;
/

CREATE OR REPLACE TRIGGER PRACOWNICY_UPDATE_VALUES
BEFORE UPDATE ON PRACOWNICY
FOR EACH ROW
BEGIN
 INSERT INTO PRACOWNICY_COPY (id_pracownika, id_osoby, id_stanowiska, staz, pensja_br)
 VALUES (:new.id_pracownika, :new.id_osoby, :new.id_stanowiska, :new.staz, :new.pensja_br);
END STANOWISKA_UPDATE_VALUES;
/

CREATE OR REPLACE TRIGGER USLUGI_UPDATE_VALUES
BEFORE UPDATE ON USLUGI
FOR EACH ROW
BEGIN
 INSERT INTO USLUGI_COPY (id_uslugi, opis, cena)
 VALUES (:new.id_uslugi, :new.opis, :new.cena);
END USLUGI_UPDATE_VALUES;
/

CREATE OR REPLACE TRIGGER ZLECENIA_UPDATE_VALUES
BEFORE UPDATE ON ZLECENIA
FOR EACH ROW
BEGIN
 INSERT INTO ZLECENIA_COPY (id_zlecenia, id_uslugi, id_klienta, id_pracownika)
 VALUES (:new.id_zlecenia, :new.id_uslugi, :new.id_klienta, :new.id_pracownika);
END USLUGI_UPDATE_VALUES;
/

-- CREATE DELETE TRIGGERS
CREATE OR REPLACE TRIGGER ADRESY_DELETE_VALUES
BEFORE DELETE ON ADRESY
FOR EACH ROW
BEGIN
 DELETE FROM ADRESY_COPY WHERE id_adresu = :old.id_adresu;
END ADRESY_DELETE_VALUES;
/

CREATE OR REPLACE TRIGGER OSOBY_DELETE_VALUES
BEFORE DELETE ON OSOBY
FOR EACH ROW
BEGIN
 DELETE FROM OSOBY_COPY WHERE id_osoby = :old.id_osoby;
END OSOBY_DELETE_VALUES;
/

CREATE OR REPLACE TRIGGER KLIENCI_DELETE_VALUES
BEFORE DELETE ON KLIENCI
FOR EACH ROW
BEGIN
 DELETE FROM KLIENCI_COPY WHERE id_klienta = :old.id_klienta;
END KLIENCI_DELETE_VALUES;
/

CREATE OR REPLACE TRIGGER STANOWISKA_DELETE_VALUES
BEFORE DELETE ON STANOWISKA
FOR EACH ROW
BEGIN
 DELETE FROM STANOWISKA_COPY WHERE id_stanowiska = :old.id_stanowiska;
END STANOWISKA_DELETE_VALUES;
/

CREATE OR REPLACE TRIGGER STANOWISKA_DELETE_VALUES
BEFORE DELETE ON STANOWISKA
FOR EACH ROW
BEGIN
 DELETE FROM STANOWISKA_COPY WHERE id_stanowiska = :old.id_stanowiska;
END STANOWISKA_DELETE_VALUES;
/

CREATE OR REPLACE TRIGGER PRACOWNICY_DELETE_VALUES
BEFORE DELETE ON PRACOWNICY
FOR EACH ROW
BEGIN
 DELETE FROM PRACOWNICY_COPY WHERE id_pracownika = :old.id_pracownika;
END PRACOWNICY_DELETE_VALUES;
/

CREATE OR REPLACE TRIGGER USLUGI_DELETE_VALUES
BEFORE DELETE ON USLUGI
FOR EACH ROW
BEGIN
 DELETE FROM USLUGI_COPY WHERE id_uslugi = :old.id_uslugi;
END USLUGI_DELETE_VALUES;
/

CREATE OR REPLACE TRIGGER ZLECENIA_DELETE_VALUES
BEFORE DELETE ON ZLECENIA
FOR EACH ROW
BEGIN
 DELETE FROM ZLECENIA_COPY WHERE id_zlecenia = :old.id_zlecenia;
END ZLECENIA_DELETE_VALUES;
/

-- DELETE DATA FOR TESTING
DELETE FROM ZLECENIA WHERE id_zlecenia > 30;
DELETE FROM USLUGI WHERE id_uslugi > 5;
DELETE FROM PRACOWNICY WHERE id_pracownika > 6;
DELETE FROM STANOWISKA WHERE id_stanowiska > 4;
DELETE FROM KLIENCI WHERE id_klienta > 14;
DELETE FROM OSOBY WHERE id_osoby > 20;
DELETE FROM ADRESY WHERE id_adresu > 15;

-- INSERT DATA FOR TESTING
-- UPDATE DATA FOR TESTING

-- DATA INTEGRITY
